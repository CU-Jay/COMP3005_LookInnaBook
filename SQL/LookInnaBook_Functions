-- returns list of books written by inputted author
create function authorOf(author varchar(30))
returns table (
	book_name varchar(40),
	page_count numeric(4),
	price numeric(5,2),
	author varchar(30),
	genre varchar(10),
	isbn numeric(13))
return table (
	select book_name, page_count, price, author, genre, isbn
	from (book_info natural join book natural join book_author natural join genre) as book_join
	where book_join.author = authorOf.author
);

-- returns list of books of the inputted genre
create function genreOf(genre varchar(10))
returns table (
	book_name varchar(40),
	page_count numeric(4),
	price numeric(5,2),
	author varchar(30),
	genre varchar(10),
	isbn numeric(13))
return table (
	select book_name, page_count, price, author, genre, isbn
	from (book_info natural join book natural join book_author natural join genre) as book_join
	where book_join.genre = genreOf.genre
);

-- returns list of books that match the inputted book name
create function nameOf(book_name varchar(40))
returns table (
	book_name varchar(40),
	page_count numeric(4),
	price numeric(5,2),
	author varchar(30),
	genre varchar(10),
	isbn numeric(13))
return table (
	select book_name, page_count, price, author, genre, isbn
	from (book_info natural join book natural join book_author natural join genre) as book_join
	where book_join.book_name = nameOf.book_name
);

-- returns information of book linked to the inputted isbn
create function isbnOf(book_name varchar(40))
returns table (
	book_name varchar(40),
	page_count numeric(4),
	price numeric(5,2),
	author varchar(30),
	genre varchar(10),
	isbn numeric(13))
return table (
	select book_name, page_count, price, author, genre, isbn
	from (book_info natural join book natural join book_author natural join genre) as book_join
	where book_join.isbn = isbn.isbn
);

-- returns list of pages with a page count within the inputted range
create function pageFilterBooks(minPages numeric(4), maxPages numeric(4))
returns table (
	book_name varchar(40),
	page_count numeric(4),
	price numeric(5,2),
	author varchar(30),
	genre varchar(10),
	isbn numeric(13))
return table (
	select book_name, page_count, price, author, genre, isbn
	from (book_info natural join book natural join book_author natural join genre) as book_join
	where book_join.page_count >= minPages and book_join.page_count <= maxPages
);

-- returns the list of book that fit the inputted price range
create function pageFilterBooks(minPrice numeric(5,2), maxPrice numeric(5,2))
returns table (
	book_name varchar(40),
	page_count numeric(4),
	price numeric(5,2),
	author varchar(30),
	genre varchar(10),
	isbn numeric(13))
return table (
	select book_name, page_count, price, author, genre, isbn
	from (book_info natural join book natural join book_author natural join genre) as book_join
	where book_join.page_count >= minPages and book_join.page_count <= maxPages
);

-- incomplete function that returns location
-- based on difference between date of order and present day
create function getLocation(order_number numeric(10))
returns varchar(50) (
	begin
	declare daysPassed integer;
	select day, month, year
	from order as O, order_tracker as T
	where 
)